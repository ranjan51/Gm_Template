trigger:
- main

variables:
  azureSubscription: '2e8ea5df-06c8-40cc-97a1-4bd73594d716' # your Azure service connection ID
  webAppName: 'react-cicd-demo'  # must match your Azure Web App name
  environmentName: 'react-cicd-demo'
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build React App
  jobs:
  - job: Build
    pool:
      name: my-pool
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '20.x'
      displayName: 'Install Node.js'

    - script: |
        npm install
        npm run build
      displayName: 'Install dependencies & build React app'

    - task: ArchiveFiles@2
      displayName: 'Archive build output'
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)/build'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true

    - publish: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
      artifact: drop

- stage: Deploy
  displayName: Deploy to Azure
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: Deploy
    environment: $(environmentName)
    pool:
      vmImage: $(vmImageName)
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureRmWebAppDeployment@4
            displayName: 'Deploy React build to Azure App Service'
            inputs:
              azureSubscription: $(azureSubscription)
              appType: webAppLinux
              WebAppName: $(webAppName)
              packageForLinux: '$(Pipeline.Workspace)/drop/$(Build.BuildId).zip'
              RuntimeStack: 'NODE|20-lts'
