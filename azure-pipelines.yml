trigger:
- main

variables:
  azureSubscription: '2e8ea5df-06c8-40cc-97a1-4bd73594d716' # Service connection name or ID
  webAppName: 'react-cicd-demo'  # Azure Web App name

stages:
- stage: Build
  displayName: Build React App
  jobs:
  - job: Build
    pool:
      name: my-pool   # self-hosted agent pool
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '20.x'
      displayName: 'Install Node.js'

    - script: |
        npm install
        npm run build
      displayName: 'Build React app'

    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '$(Build.SourcesDirectory)/build'   # <-- FIXED PATH
        includeRootFolder: false
        archiveType: zip
        archiveFile: '$(Build.ArtifactStagingDirectory)/build.zip'
        replaceExistingArchive: true
      displayName: 'Archive build output'

    - publish: '$(Build.ArtifactStagingDirectory)/build.zip'
      artifact: drop

- stage: Deploy
  displayName: Deploy to Azure
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: Deploy
    environment: 'production'
    pool:
      name: my-pool   # self-hosted agent pool
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureRmWebAppDeployment@4
            inputs:
              azureSubscription: $(azureSubscription)
              appType: webAppLinux
              WebAppName: $(webAppName)
              packageForLinux: '$(Pipeline.Workspace)/drop/build.zip'
              RuntimeStack: 'NODE|20-lts'
            displayName: 'Deploy React app to Azure App Service'
