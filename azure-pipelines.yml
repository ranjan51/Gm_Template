trigger:
- main

variables:
  azureSubscription: '2e8ea5df-06c8-40cc-97a1-4bd73594d716'
  webAppName: 'react-cicd-demo'

stages:
- stage: Build
  displayName: Build React App
  jobs:
  - job: Build
    pool:
      name: my-pool
    steps:
    - checkout: self

    - task: NodeTool@0
      inputs:
        versionSpec: '20.x'
      displayName: 'Install Node.js'

    - script: |
        cd my-app
        npm install
        npm run build
      workingDirectory: '$(Build.SourcesDirectory)'
      displayName: 'Build React app'

    - script: |
        echo "=== Listing contents of $(Build.SourcesDirectory)\my-app ==="
        dir "$(Build.SourcesDirectory)\my-app"
        echo "=== Listing contents of build folder (if exists) ==="
        dir "$(Build.SourcesDirectory)\my-app\build"
      displayName: 'Check build output'
      continueOnError: true

    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '$(Build.SourcesDirectory)\my-app\build'
        includeRootFolder: false
        archiveType: zip
        archiveFile: '$(Build.ArtifactStagingDirectory)\build.zip'
        replaceExistingArchive: true
      displayName: 'Archive build output'

    - publish: '$(Build.ArtifactStagingDirectory)\build.zip'
      artifact: drop

- stage: Deploy
  displayName: Deploy to Azure
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: Deploy
    environment: 'production'
    pool:
      name: my-pool
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureRmWebAppDeployment@4
            inputs:
              azureSubscription: $(azureSubscription)
              appType: webAppLinux
              WebAppName: $(webAppName)
              packageForLinux: '$(Pipeline.Workspace)/drop/build.zip'
              RuntimeStack: 'NODE|20-lts'
            displayName: 'Deploy React app to Azure App Service'
